{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pedrolima/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js\";\nimport { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"View Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"viewing an awesome meetup!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      description: props.meetupData.description,\n      title: props.meetupData.title,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  //nextJs needs to generate all versions of meetupIds pages in advance for all the supported Ids\n  const client = await MongoClient.connect('mongodb+srv://pedrolima:Passw0rd123@cluster0.0gnif.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups'); //only fetching id\n\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //in order to access the ID parameter which is on the URL can be accessed through context. \n  //hooks cannot be used in getStaticProps\n  //getStaticPaths is required for dynamic SSG pages \n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://pedrolima:Passw0rd123@cluster0.0gnif.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const selectedMeetup = await meetupsCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/pedrolima/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["Fragment","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","description","title","address","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACA,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKA,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAAtC;AAA6C,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAA3E;AAAwF,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAAhH;AAAwH,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAAlJ;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,oGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B,CALkC,CAMlC;;AACA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAM,KAAK;AAC3BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAGF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADmB,KAAL,CAAnB;AAFJ,GAAP;AAOH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC;AACA;AACA;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,oGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AACA,QAAMe,cAAc,GAAG,MAAMhB,kBAAkB,CAACiB,OAAnB,CAA2B;AAACb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AAAd,GAA3B,CAA7B;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEA,SAAO;AACH1B,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACJ6B,QAAAA,EAAE,EAAEJ,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADA;AAEJnB,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAFlB;AAGJC,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAHpB;AAIJH,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJlB;AAKJC,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALxB;AADT;AADJ,GAAP;AAYH;AAED,eAAeJ,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props){\n    return (\n    <Fragment>\n        <Head>\n            <title>View Meetup</title>\n            <meta name=\"description\" content='viewing an awesome meetup!'></meta>\n        </Head>\n    <MeetupDetail image={props.meetupData.image} description={props.meetupData.description} title={props.meetupData.title}  address={props.meetupData.address} />\n    </Fragment>)\n}\n\nexport async function getStaticPaths(){\n    //nextJs needs to generate all versions of meetupIds pages in advance for all the supported Ids\n    const client = await MongoClient.connect('mongodb+srv://pedrolima:Passw0rd123@cluster0.0gnif.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollections = db.collection('meetups');\n    //only fetching id\n    const meetups = await meetupsCollections.find({},{_id: 1}).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map((meetup => ({\n            params: {meetupId : meetup._id.toString()},\n        }))),\n    }\n\n}\n\nexport async function getStaticProps(context){\n    //in order to access the ID parameter which is on the URL can be accessed through context. \n    //hooks cannot be used in getStaticProps\n    //getStaticPaths is required for dynamic SSG pages \n\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://pedrolima:Passw0rd123@cluster0.0gnif.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n    const meetupsCollections = db.collection('meetups');\n    const selectedMeetup = await meetupsCollections.findOne({_id: ObjectId(meetupId)})\n\n    console.log(selectedMeetup);\n    \n    return {\n        props: {\n            meetupData: {\n                    id: selectedMeetup._id.toString(),\n                    title: selectedMeetup.title,\n                    address: selectedMeetup.address,\n                    image: selectedMeetup.image,\n                    description: selectedMeetup.description,\n                }\n            },\n    }\n    \n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}